<h2 id='order'>Order</h2>
<p>Open Orders</p>

<p><code>GET /v1/order/open-orders</code></p>
<h3 id='optional-query-params'>Optional Query Params</h3>
<ul>
<li> <code>startTimestamp</code>: number (UNIX timestamp in milliseconds)</li>
<li> <code>endTimestamp</code>: number (UNIX timestamp in milliseconds)</li>
<li> <code>sortOrder</code>: string (asc or desc, default: desc)</li>
<li> <code>pageSize</code>: number</li>
</ul>

<p>Get Open Orders for a user.</p>

<p><code>GET /v1/order/open-orders?startTimestamp=1720103457000&amp;endTimestamp=1720603457000&amp;sortOrder=desc&amp;pageSize=100</code></p>
<h3 id='response'>Response</h3>
<blockquote>
<p>Without Query Params</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript"><code><span class="p">[</span>
    <span class="p">{</span>
      <span class="dl">"</span><span class="s2">clientOrderId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">contractType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PERPETUAL</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">filledAmount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="c1">// Filled Quantity</span>
      <span class="dl">"</span><span class="s2">linkId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">linkType</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderLinkType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">orderAmount</span><span class="dl">"</span><span class="p">:</span> <span class="mf">0.005</span><span class="p">,</span> <span class="c1">// Quantity</span>
      <span class="dl">"</span><span class="s2">placeType</span><span class="dl">"</span><span class="p">:</span> <span class="nx">PlaceType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">price</span><span class="dl">"</span><span class="p">:</span> <span class="mi">3400000</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderSide</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">subType</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderSubType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BTCINR</span><span class="dl">"</span><span class="p">,</span> <span class="c1">// Contract Pair BTCINR, ETHINR, etc.</span>
      <span class="dl">"</span><span class="s2">time</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">timestamp</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="nx">UserOrderType</span>
      <span class="dl">"</span><span class="s2">refId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// Optional</span>
      <span class="dl">"</span><span class="s2">baseAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">quoteAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span>
    <span class="p">}</span>
<span class="p">]</span>
</code></pre></div>
<blockquote>
<p>With query params</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1703047483451</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="dl">"</span><span class="s2">clientOrderId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">d1bcb1c0219d4ebf6790-12-ext</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">time</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">2024-04-01T08:14:45.055Z</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BOMEINR</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">contractType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PERPETUAL</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">MARKET</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BUY</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">price</span><span class="dl">"</span><span class="p">:</span> <span class="mf">1.3394</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">orderAmount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">340</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">filledAmount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">linkId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">d1bcb1c0219d4ebf6790-12-ext</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">linkType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">ORDER</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">subType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PRIMARY</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">placeType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">ORDER_FORM</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">refId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// Optional</span>
      <span class="dl">"</span><span class="s2">baseAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">quoteAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span>
    <span class="p">}</span>
  <span class="p">]</span>
<span class="p">}</span>
</code></pre></div>
<aside class="note">
About `nextTimestamp` field in the response, it should be used as the query param for the next API call for pagination.
</aside>
<h3 id='case-1-sortorder-is-ascending'>Case 1: sortOrder is ascending</h3>
<p>In this case, shift the lower bound, i.e. <code>nextTimestamp</code> value should be entered in the <code>startTimestamp</code> query param for the next API call.</p>
<h3 id='case-2-sortorder-is-descending'>Case 2: sortOrder is descending</h3>
<p>In this case, shift the upper bound, i.e. <code>nextTimestamp</code> value should be entered in the <code>endTimestamp</code> query param for the next API call.</p>

<aside class="note">
Either of the bounds (start or end) can be skipped, for example, input can also be only `endTimestamp` while `startTimestamp` not being mentioned.
</aside>

<p>For examples of usage of <code>startTimestamp</code>, <code>endTimestamp</code>, <code>sortOrder</code>, <code>Pagesize</code>, refer the <strong>Examples</strong> section of <strong>Order History</strong>.</p>
<h2 id='order-history'>Order History</h2>
<p>Get Order History for a user.</p>

<p><code>GET /v1/order/order-history</code></p>
<h3 id='optional-query-params-2'>Optional Query Params:</h3>
<ul>
<li><code>startTimestamp</code>: number (UNIX timestamp in milliseconds)</li>
<li><code>endTimestamp</code>: number (UNIX timestamp in milliseconds)</li>
<li><code>sortOrder</code>: string (asc or desc, default: desc)</li>
<li> <code>pageSize</code>: number (default: 100)</li>
</ul>
<h3 id='example'>Example</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1720103457000&amp;endTimestamp=1720603457000&amp;sortOrder=desc&amp;pageSize=100</code></p>
<h3 id='response-2'>Response</h3>
<blockquote>
<p>Without query params</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript"><code><span class="p">[</span>
    <span class="p">{</span>
      <span class="dl">"</span><span class="s2">clientOrderId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">updatedAt</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">timestamp</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BTCINR</span><span class="dl">"</span><span class="p">,</span> <span class="c1">// Contract Pair BTCINR, ETHINR, etc.</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="nx">UserOrderType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">isIsolated</span><span class="dl">"</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderSide</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">price</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">24000</span><span class="dl">"</span><span class="p">,</span> <span class="c1">// The price at which order was placed</span>
      <span class="dl">"</span><span class="s2">avgPrice</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">25000</span><span class="dl">"</span><span class="p">,</span> <span class="c1">// The average price at which order got executed</span>
      <span class="dl">"</span><span class="s2">origQty</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span> <span class="c1">// Order Amount</span>
      <span class="dl">"</span><span class="s2">cumQty</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// The total quantity executed</span>
      <span class="dl">"</span><span class="s2">executedQty</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// Quantity executed in the latest partial fill</span>
      <span class="dl">"</span><span class="s2">reduceOnly</span><span class="dl">"</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">status</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderStatus</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">leverage</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">subType</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderSubType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">contractType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PERPETUAL</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">iconUrl</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">refId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// Optional</span>
      <span class="dl">"</span><span class="s2">baseAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">quoteAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span>
    <span class="p">}</span>
<span class="p">]</span>
</code></pre></div>
<blockquote>
<p>With query params</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">477</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1703047483451</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="dl">"</span><span class="s2">clientOrderId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">57c5e701db622d444bab-12-ext</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">updatedAt</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">2024-05-02T07:41:25.985Z</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">ETHINR</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">MARKET</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">isIsolated</span><span class="dl">"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">SELL</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">price</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">250245</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">avgPrice</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">250243</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">origQty</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">2001.94</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">cumQty</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">0.008</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">executedQty</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">0.008</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">reduceOnly</span><span class="dl">"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">status</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">FILLED</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">leverage</span><span class="dl">"</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">subType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PRIMARY</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">contractType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PERPETUAL</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">iconUrl</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">https://storage.googleapis.com/pi42-dev-static/contract-icons/eth.png</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">refId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// Optional</span>
      <span class="dl">"</span><span class="s2">baseAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">quoteAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span>
    <span class="p">},</span>
  <span class="p">]</span>
<span class="p">}</span>
</code></pre></div>
<aside class="note">
About nextTimestamp field in the response, it should be used as the query param for the next API call for pagination.
</aside>
<h3 id='case-1-sortorder-is-ascending-2'>Case 1: sortOrder is ascending</h3>
<p>In this case, shift the lower bound, i.e. <code>nextTimestamp</code> value should be entered in the <code>startTimestamp</code> query param for the next API call.</p>
<h3 id='case-2-sortorder-is-descending-2'>Case 2: sortOrder is descending</h3>
<p>In this case, shift the upper bound, i.e. <code>nextTimestamp</code> value should be entered in the <code>endTimestamp</code> query param for the next API call.</p>

<aside class="note">
Either of the bounds (start or end) can be skipped, for example, input can also be only endTimestamp while startTimestamp not being mentioned.
</aside>
<h1 id='examples'>Examples</h1><h2 id='case-1'>CASE 1</h2>
<p>Get order history in descending order starting from 25th May 2024 (1716651879000) to 25th July 2024 (1721922358000) with pageSize 100. </p>

<p>The starting point will be the following:</p>
<h3 id='request'>Request</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1716651879000&amp;endTimestamp=1721922358000&amp;sortOrder=desc&amp;pageSize=100</code></p>

<p>This will return 100* entries. (*less than 100 entries can be there in case of totalCount &lt; 100)</p>
<h3 id='response-3'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1717762979731</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{...},</span>
    <span class="p">{...},</span> <span class="p">...</span>
    <span class="p">]</span> <span class="p">(</span><span class="mi">100</span> <span class="nx">entries</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div>
<p>If the totalCount is greater than 100, more requests need to be made. Since sortOrder is descending, the <code>nextTimestamp</code> returned by the current response needs to be used as the <code>endTimestamp</code> for the next request.</p>

<aside class="note"> 
The startTimestamp will not be changed in case of descending sortOrder.
</aside>
<h3 id='next-request'>Next Request</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1716651879000&amp;endTimestamp=1717762979731&amp;sortOrder=desc&amp;pageSize=100</code></p>
<h3 id='response-4'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1717211879871</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{...},</span>
    <span class="p">{...},</span> <span class="p">...</span>
    <span class="p">]</span> <span class="p">(</span><span class="mi">60</span> <span class="nx">entries</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div>
<p>Since 100 + 60 (160) total entries are returned, you should stop. Further request by using the nextTimestamp as the endStamp will return zero entries.</p>
<h3 id='next-request-2'>Next Request</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1716651879000&amp;endTimestamp=1717211879871&amp;sortOrder=desc&amp;pageSize=100</code></p>
<h3 id='response-5'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[]</span>
<span class="p">}</span>
</code></pre></div><h2 id='case-2'>CASE 2</h2>
<p>To get order history in ascending order starting from 1st Jan 2024 (1704109827000) to 1st Feb 2024 (1706788227000) with pageSize 20. The starting point will be the following request -</p>
<h3 id='request-2'>Request</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1704109827000&amp;endTimestamp=1706788227000&amp;sortOrder=asc&amp;pageSize=20</code></p>

<p>This will return 20* entries. (*less than 20 entries can be there in case of totalCount &lt; 20)</p>
<h3 id='response-6'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">42</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1704887427120</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{...},</span>
    <span class="p">{...},</span> <span class="p">...</span>
    <span class="p">]</span> <span class="p">(</span><span class="mi">20</span> <span class="nx">entries</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div>
<p>If the totalCount is greater than 20, more requests need to be made. Since sortOrder is ascending, the <code>nextTimestamp</code> returned by the current response needs to be used as the <code>startTimestamp</code> for the next request.</p>

<aside class="note">
The endTimestamp will not be changed in case of ascending sortOrder.
</aside>
<h3 id='next-request-3'>Next Request</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1704887427120&amp;endTimestamp=1706788227000&amp;sortOrder=asc&amp;pageSize=20</code></p>
<h3 id='response-7'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">42</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1706010627696</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{...},</span>
    <span class="p">{...},</span> <span class="p">...</span>
    <span class="p">]</span> <span class="p">(</span><span class="mi">20</span> <span class="nx">entries</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div>
<p>Since 20 + 20 (40) entries are returned till now (&lt;42), more request need to be made. Once again, the “nextTimestamp” returned by the current response needs to be used as the “startTimestamp” for the next request.</p>
<h3 id='next-request-4'>Next Request</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1706010627696&amp;endTimestamp=1706788227000&amp;sortOrder=asc&amp;pageSize=20</code></p>
<h3 id='response-8'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">42</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="mi">1706529027420</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{...},</span>
    <span class="p">{...}</span>
    <span class="p">]</span> <span class="p">(</span><span class="mi">2</span> <span class="nx">entries</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div>
<p>Since 20 + 20 + 2 (42) total entries are returned, you should stop. Further request using nextTimestamp as the startTimestamp will return zero entries.</p>
<h3 id='next-request-5'>Next Request</h3>
<p><code>GET /v1/order/order-history?startTimestamp=1706529027420&amp;endTimestamp=1706788227000&amp;sortOrder=asc&amp;pageSize=20</code></p>
<h3 id='response-9'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">totalCount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">42</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">nextTimestamp</span><span class="dl">"</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">data</span><span class="dl">"</span><span class="p">:</span> <span class="p">[]</span>
<span class="p">}</span>
</code></pre></div><h2 id='linked-orders'>Linked Orders</h2>
<p>Get the linked orders for a link ID</p>

<p><code>GET /v1/order/linked-orders/{linkId}</code></p>
<h3 id='response-10'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">[</span>
    <span class="p">{</span>
      <span class="dl">"</span><span class="s2">clientOrderId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">time</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">timestamp</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BTCINR</span><span class="dl">"</span><span class="p">,</span> <span class="c1">// Contract Pair BTCINR, ETHINR, etc.</span>
      <span class="dl">"</span><span class="s2">contractType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PERPETUAL</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="nx">UserOrderType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderSide</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">price</span><span class="dl">"</span><span class="p">:</span> <span class="mi">3400000</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">orderAmount</span><span class="dl">"</span><span class="p">:</span> <span class="mf">0.005</span><span class="p">,</span> <span class="c1">// Quantity</span>
      <span class="dl">"</span><span class="s2">filledAmount</span><span class="dl">"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="c1">// Filled Quantity</span>
      <span class="dl">"</span><span class="s2">linkId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">linkType</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderLinkType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">subType</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderSubType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">placeType</span><span class="dl">"</span><span class="p">:</span> <span class="nx">PlaceType</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">takeProfitPrice</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// Will be present only if the order is take profit order</span>
      <span class="dl">"</span><span class="s2">stopLossPrice</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// Will be present only if the order is stop loss order</span>
      <span class="dl">"</span><span class="s2">status</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderStatus</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">refId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// Optional</span>
      <span class="dl">"</span><span class="s2">baseAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">quoteAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span>
    <span class="p">}</span>
<span class="p">]</span>
</code></pre></div><h2 id='cancel-order'>Cancel Order</h2>
<p>Cancel open order</p>

<p><code>DELETE /v1/order/delete-order</code></p>
<h3 id='request-3'>Request</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
   <span class="dl">"</span><span class="s2">clientOrderId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// The client order ID of the order</span>
<span class="p">}</span>
</code></pre></div><h3 id='response-11'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">clientOrderId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">orderId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">status</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderStatus</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">success</span><span class="dl">"</span><span class="p">:</span>  <span class="nx">boolean</span>
<span class="p">}</span>
</code></pre></div><h2 id='add-margin'>Add Margin</h2>
<p>Add margin to an open position</p>

<p><code>POST /v1/order/add-margin</code></p>
<h3 id='request-body'>Request Body</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">positionId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">amount</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span>
<span class="p">}</span>
</code></pre></div><h3 id='response-12'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
    <span class="dl">"</span><span class="s2">lockedBalance</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// The locked balance of the user</span>
    <span class="dl">"</span><span class="s2">withdrawableBalance</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// Available balance of the user</span>
    <span class="dl">"</span><span class="s2">message</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Margin added successfully</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">asset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span>
<span class="p">}</span>
</code></pre></div><h2 id='reduce-margin'>Reduce Margin</h2>
<p>Reduce margin from an open position</p>

<p><code>POST /v1/order/reduce-margin</code></p>
<h3 id='request-body-2'>Request Body</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">positionId</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">amount</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span>
<span class="p">}</span>
</code></pre></div><h3 id='response-13'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
    <span class="dl">"</span><span class="s2">lockedBalance</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// The locked balance of the user</span>
    <span class="dl">"</span><span class="s2">withdrawableBalance</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// Available balance of the user</span>
    <span class="dl">"</span><span class="s2">message</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Margin Reduced Successfully</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">asset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span>
<span class="p">}</span>
</code></pre></div><h2 id='get-order'>Get Order</h2>
<p>Fetch order details based on client order id.</p>

<p><code>GET /v1/order</code></p>
<h3 id='query-params'>Query Params</h3>
<ul>
<li><code>clientOrderId</code>: string</li>
</ul>

<p>Example: GET /v1/order/clientOrderId=abc</p>
<h3 id='response-14'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="nl">id</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">clientOrderId</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">filledQty</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// net filled qty</span>
  <span class="nl">executedQty</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// last filled qty</span>
  <span class="nl">avgPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// avg price</span>
  <span class="nl">quantity</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// leveraged qty</span>
  <span class="nl">price</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// Order price - limit/ stop price, market price</span>
  <span class="nl">placeType</span><span class="p">:</span> <span class="nx">PlaceType</span><span class="p">;</span>
  <span class="nl">lockedMargin</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">lockedMarginInMarginAsset</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// Optional</span>
  <span class="nl">side</span><span class="p">:</span> <span class="nx">OrderSide</span><span class="p">;</span>
  <span class="nl">leverage</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">status</span><span class="p">:</span> <span class="nx">OrderStatus</span><span class="p">;</span>
  <span class="nl">stopPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">symbol</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">type</span><span class="p">:</span> <span class="nx">UserOrderType</span><span class="p">;</span>
  <span class="nl">isIsolated</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">;</span>
  <span class="nl">linkType</span><span class="p">:</span> <span class="nx">OrderLinkType</span><span class="p">;</span>
  <span class="nl">linkId</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">limitPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">takeProfitPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">stopLossPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">subType</span><span class="p">:</span> <span class="nx">OrderSubType</span><span class="p">;</span>
  <span class="nl">isLiquidationOrder</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">;</span>
  <span class="nl">createdTime</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="nl">updatedTime</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="nl">contractType</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">filledValue</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">refId</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span> <span class="c1">// Optional</span>
  <span class="nl">baseAsset</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="nx">quoteAsset</span><span class="p">:</span> <span class="nx">string</span>
  <span class="nx">marginAsset</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div><h2 id='get-order-using-reference-id'>Get Order Using reference ID</h2>
<p>Fetch order details based on ref id.</p>

<p><code>GET /v1/order/ref-id</code></p>
<h3 id='query-params-2'>Query Params</h3>
<p><code>refId</code>:  string</p>

<p>Example: <code>GET /v1/order/ref-id/refId=ref123</code></p>
<h3 id='response-15'>Response</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="nl">id</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">clientOrderId</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">filledQty</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// net filled qty</span>
  <span class="nl">executedQty</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// last filled qty</span>
  <span class="nl">avgPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// avg price</span>
  <span class="nl">quantity</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// leveraged qty</span>
  <span class="nl">price</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// Order price - limit/ stop price, market price</span>
  <span class="nl">placeType</span><span class="p">:</span> <span class="nx">PlaceType</span><span class="p">;</span>
  <span class="nl">lockedMargin</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">lockedMarginInMarginAsset</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span> <span class="c1">// Optional</span>
  <span class="nl">side</span><span class="p">:</span> <span class="nx">OrderSide</span><span class="p">;</span>
  <span class="nl">leverage</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">status</span><span class="p">:</span> <span class="nx">OrderStatus</span><span class="p">;</span>
  <span class="nl">stopPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">symbol</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">type</span><span class="p">:</span> <span class="nx">UserOrderType</span><span class="p">;</span>
  <span class="nl">isIsolated</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">;</span>
  <span class="nl">linkType</span><span class="p">:</span> <span class="nx">OrderLinkType</span><span class="p">;</span>
  <span class="nl">linkId</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">limitPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">takeProfitPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">stopLossPrice</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">subType</span><span class="p">:</span> <span class="nx">OrderSubType</span><span class="p">;</span>
  <span class="nl">isLiquidationOrder</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">;</span>
  <span class="nl">createdTime</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="nl">updatedTime</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="nl">contractType</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">filledValue</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="nl">refId</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span> <span class="c1">// Optional</span>
  <span class="nl">baseAsset</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="nx">quoteAsset</span><span class="p">:</span> <span class="nx">string</span>
  <span class="nx">marginAsset</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div><h2 id='place-order'>Place Order</h2>
<p>Orders placed from “ORDER FORM”. Place a new order</p>

<p><code>POST /v1/order/place-order</code></p>
<h3 id='request-body-3'>Request Body</h3><div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">placeType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">ORDER_FORM</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">quantity</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">reduceOnly</span><span class="dl">"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="nx">OrderSide</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="nx">UserOrderType</span><span class="p">,</span> <span class="c1">// Accepted Values: "MARKET", "LIMIT"</span>
  <span class="dl">"</span><span class="s2">price</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// Required if type is LIMIT</span>
  <span class="dl">"</span><span class="s2">stopLossPrice</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// Optional</span>
  <span class="dl">"</span><span class="s2">takeProfitPrice</span><span class="dl">"</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span> <span class="c1">// Optional</span>
  <span class="dl">"</span><span class="s2">marginAsset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">string</span> <span class="c1">// Optional.. By default INR will be used</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Example - Market Order</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">placeType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">ORDER_FORM</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">quantity</span><span class="dl">"</span><span class="p">:</span> <span class="mf">0.01</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">reduceOnly</span><span class="dl">"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BUY</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BTCINR</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">MARKET</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">marginAsset</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">INR</span><span class="dl">"</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Example - Market Order with Take profit</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">placeType</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">ORDER_FORM</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">quantity</span><span class="dl">"</span><span class="p">:</span> <span class="mf">0.01</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">reduceOnly</span><span class="dl">"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">side</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">SELL</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">BTCINR</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">MARKET</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">takeProfitPrice</span><span class="dl">"</span><span class="p">:</span> <span class="mi">6800000</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Example Limit Order with take profit</p>
</blockquote>
<h3 id='request-body-4'>Request Body</h3><div class="highlight"><pre class="highlight plaintext"><code>{
  "placeType": "ORDER_FORM",
  "quantity": 0.01,
  "reduceOnly": false,
  "side": "BUY",
  "symbol": "BTCINR",
  "type": "LIMIT",
  "price": 5600000,
  "takeProfitPrice": 6800000
}
</code></pre></div>
<p>Orders placed from “POSITION”
Request Body
{
  &quot;placeType&quot;: &quot;POSITION&quot;,
  &quot;quantity&quot;: number,
  &quot;reduceOnly&quot;: false,
  &quot;type&quot;: UserOrderType, // Accepted values: MARKET, STOP_MARKET, LIMIT
  &quot;price&quot;: number, // Required if type is LIMIT
  &quot;positionId&quot;: string,
  &quot;stopLossPrice&quot;: number, // Optional --&gt; If this is passed the type should be STOP_MARKET
  &quot;takeProfitPrice&quot;: number // Optional --&gt; If this is passed the type should be STOP_MARKET
}
Response
{
    clientOrderId: string,
    time: &quot;timestamp&quot;,
    symbol: string,
    contractType: string, 
    type: UserOrderType,
    side: OrderSide,
    price: number;
    orderAmount: number,
    filledAmount: number,
    availableBalance: number,
    linkId: string,
    linkType: OrderLinkType,
    subType: OrderSubType, 
    placeType: PlaceType,
    lockedMargin: number,
    refId: string, // Optional
    &quot;baseAsset&quot;: string,
    &quot;quoteAsset&quot;: string,
    &quot;marginAsset&quot;: string,
    &quot;lockedMarginInMarginAsset&quot;: number
  }
Sample:
Placing Take Profit, Stop loss order from Position
Request Body
{
  &quot;placeType&quot;: &quot;POSITION&quot;,
  &quot;quantity&quot;: 0.01,
  &quot;reduceOnly&quot;: false,
  &quot;type&quot;: &quot;STOP_MARKET&quot;,
  &quot;positionId&quot;: &quot;abcd-efgh-123&quot;,
  &quot;stopLossPrice&quot;: 6000000, 
  &quot;takeProfitPrice&quot;: 6500000
}
Market Close Order
Request Body
{
  &quot;placeType&quot;: &quot;POSITION&quot;,
  &quot;quantity&quot;: 0.01,
  &quot;reduceOnly&quot;: false,
  &quot;type&quot;: &quot;MARKET&quot;,
  &quot;positionId&quot;: &quot;abcd-efgh-123&quot;
}
Limit Close Order
Request Body
{
  &quot;placeType&quot;: &quot;POSITION&quot;,
  &quot;quantity&quot;: 0.01,
  &quot;reduceOnly&quot;: false,
  &quot;type&quot;: &quot;LIMIT&quot;, 
  &quot;positionId&quot;: &quot;abcd-efgh-123&quot;,
  &quot;price&quot;: 6400000
}</p>

<p>Placing TP/ SL order from position
Maximum quantity for take profit or stop loss order that can be placed is the position quantity</p>

<p>Example:
Consider an open position of 0.05 BTC
No Take profit order exists for this contract, then 0.05 BTC can be placed
Take profit order of 0.02 BTC already exists → 0.05 - 0.02 = 0.03 BTC can be placed
Same case for stop loss orders</p>

<p>Open orders API response contains subType having values PRIMARY, STOP_LOSS, TAKE_PROFIT.
For calculating total quantity of open stop loss orders for a contract pair → use sub type STOP_LOSS
For calculating total quantity of open take profit orders for a contract pair → use sub type TAKE_PROFIT
Along with above, use placeType POSITION.
Consider this position
Position → BTCINR, 0.8 BTC
Open Orders
[
  {
    &quot;clientOrderId&quot;: &quot;9f72fddf886c37b41e96-5-ext&quot;,
    &quot;time&quot;: &quot;2024-02-21T14:19:39.604Z&quot;,
    &quot;symbol&quot;: &quot;BTCINR&quot;,
    &quot;contractType&quot;: &quot;PERPETUAL&quot;,
    &quot;type&quot;: &quot;STOP_MARKET&quot;,
    &quot;side&quot;: &quot;SELL&quot;,
    &quot;price&quot;: 4800000,
    &quot;orderAmount&quot;: 0.02,
    &quot;filledAmount&quot;: 0,
    &quot;linkId&quot;: &quot;4f895694c18b1200e508-5-ext&quot;,
    &quot;linkType&quot;: &quot;ORDER_TP&quot;,
    &quot;subType&quot;: &quot;TAKE_PROFIT&quot;,
    &quot;placeType&quot;: &quot;POSITION&quot;
  },
{
    &quot;clientOrderId&quot;: &quot;9f72fddf886c37b41e96-5-ext&quot;,
    &quot;time&quot;: &quot;2024-02-21T14:19:39.604Z&quot;,
    &quot;symbol&quot;: &quot;BTCINR&quot;,
    &quot;contractType&quot;: &quot;PERPETUAL&quot;,
    &quot;type&quot;: &quot;STOP_MARKET&quot;,
    &quot;side&quot;: &quot;SELL&quot;,
    &quot;price&quot;: 4800000,
    &quot;orderAmount&quot;: 0.03,
    &quot;filledAmount&quot;: 0,
    &quot;linkId&quot;: &quot;4f895694c18b1200e508-5-ext&quot;,
    &quot;linkType&quot;: &quot;ORDER_TP&quot;,
    &quot;subType&quot;: &quot;STOP_LOSS&quot;,
    &quot;placeType&quot;: &quot;POSITION&quot;
  },
]
The open take profit orders for this contract pair is 0.02 BTC and stop loss is 0.03 BTC. The maximum take profit quantity that can be placed is 0.8 - 0.02 = 0.78 BTC and for stop loss it is 0.8 - 0.03 = 0.77 BTC.
If both takeProfit and stopLoss order for a position is placed: Minimum (available takeProfitQty, available stopLossQty) will be accepted. In the above example it will be 0.77 BTC.
Individual quantities will be as per the individual calculations.
Margin History - GET /v1/order/fetch-margin-history
Optional Query Params:
startTimestamp: number (UNIX timestamp in milliseconds)
endTimestamp: number (UNIX timestamp in milliseconds)
sortOrder: string (asc or desc, default: desc)
pageSize: number
Get margin history (add/reduce margin) for a user
For Example: GET v1/order/fetch-margin-history?pageSize=10&amp;sortOrder=desc&amp;startTimestamp=1721031346916
Default Response: (Without query params)
{
  &quot;data&quot;: [
    {
      &quot;id&quot;: 6,
      &quot;amount&quot;: 2,
      &quot;refId&quot;: null,
      &quot;marginInMarginAsset&quot;: 2,
      &quot;marginAsset&quot;: &quot;INR&quot;,
      &quot;positionId&quot;: &quot;f01c6f65-90ff-4da8-b735-a6f8ac877e01&quot;,
      &quot;operation&quot;: &quot;ADD_MARGIN&quot;,
      &quot;createdAt&quot;: &quot;2024-07-15T08:16:47.925Z&quot;,
      &quot;updatedAt&quot;: &quot;2024-07-15T08:16:47.925Z&quot;
    }
  ],
  &quot;totalCount&quot;: 2,
  &quot;nextTimestamp&quot;: &quot;1721031407925&quot;
}
Note: About nextTimestamp field in the response, it should be used as the query param for the next api call for pagination.
Case 1: sortOrder is ascending,
In this case, shift the lower bound, i.e. nextTimestamp value should be entered in the startTimestamp query param for the next API call.
Case2: sortOrder is descending,
In this case, shift the upper bound, i.e. nextTimestamp value should be entered in the endTimestamp query param for the next API call.
Note: Either of the bounds (start or end) can be skipped, for example, input can also be only endTimestamp while startTimestamp not being mentioned.
For examples of usage of startTimestamp, endTimestamp, sortOrder, Pagesize - please refer the “Examples” section of Order History.</p>

<p>Wallet
INR Wallet Details - GET /v1/wallet/inr-wallet/details
Response
{
  &quot;inrBalance&quot;: &quot;50000.70&quot;,
  &quot;withdrawableBalance&quot;: &quot;40000.20&quot;,
  &quot;lockedBalance&quot;: &quot;10000.50&quot;
}</p>

<p>User Data
Transaction History - GET /v1/user-data/transaction-history
Optional Query Params:
startTimestamp: number (UNIX timestamp in milliseconds)
endTimestamp: number (UNIX timestamp in milliseconds)
sortOrder: string (asc or desc, default: desc)
pageSize: number (default: 100)
tradeId: number
positionId: string
Get user’s transaction history.
Important Points:
If tradeId is passed, transaction history of that trade will be returned. This will include REALIZED_PNL, COMMISSION, GST_ON_COMMISSION, FEE_DISCOUNT Transaction Types.
If positionId is passed, transaction history of that position will be returned. This will include FUNDING_FEE, GST_ON_FUNDING_FEE Transaction Types.
Do not pass tradeId and positionId together.
For Example: GET /v1/user-data/transaction-history?startTimestamp=1720103457000&amp;endTimestamp=1720603457000&amp;sortOrder=desc&amp;pageSize=100
Default Response: (Without query params)
[
   {
      &quot;id&quot;: number,
      &quot;time&quot;: timestamp,
      &quot;type&quot;: TransactionType,
      &quot;amount&quot;: number,
      &quot;asset&quot;: &quot;INR&quot;,
      &quot;symbol&quot;: &quot;BTCINR&quot;, // Contract Pair BTCINR, ETHINR, etc.
      &quot;contractType&quot;: &quot;PERPETUAL&quot;,
      &quot;baseAsset&quot;: string,
      &quot;quoteAsset&quot;: string
   }
 ]
New Response: (With query params)
{
  &quot;totalCount&quot;: 877,
  &quot;nextTimestamp&quot;: 1703047483451,
  &quot;data&quot;: [
    {
      &quot;id&quot;: 46672,
      &quot;time&quot;: &quot;2024-04-29T08:20:43.543Z&quot;,
      &quot;type&quot;: &quot;COMMISSION&quot;,
      &quot;amount&quot;: -10.46,
      &quot;asset&quot;: &quot;INR&quot;,
      &quot;symbol&quot;: &quot;BTCINR&quot;,
      &quot;contractType&quot;: &quot;PERPETUAL&quot;,
      &quot;baseAsset&quot;: string,
      &quot;quoteAsset&quot;: string
    },
  ],
}
Note: About nextTimestamp field in the response, it should be used as the query param for the next API call for pagination:
Case 1: sortOrder is ascending,
In this case, shift the lower bound, i.e. nextTimestamp value should be entered in the startTimestamp query param for the next API call.
Case2: sortOrder is descending,
In this case, shift the upper bound, i.e. nextTimestamp value should be entered in the endTimestamp query param for the next API call.
Note: Either of the bounds (start or end) can be skipped, for example, input can also be only endTimestamp while startTimestamp not being mentioned.
For examples of usage of startTimestamp, endTimestamp, sortOrder, Pagesize - please refer the “Examples” section of Order History.
Transaction History by Transaction Id - GET /v1/user-data/transaction-history/{id}
Get user’s transaction history based on transaction id.
For Example: GET /v1/user-data/transaction-history/10
Response:
{
  &quot;id&quot;: number,
  &quot;time&quot;: timestamp,
  &quot;type&quot;: TransactionType,
  &quot;amount&quot;: number,
  &quot;asset&quot;: &quot;INR&quot;,
  &quot;symbol&quot;: &quot;BTCINR&quot;, // Contract Pair BTCINR, ETHINR, etc.
  &quot;contractType&quot;: &quot;PERPETUAL&quot;,
  &quot;baseAsset&quot;: string,
  &quot;quoteAsset&quot;: string
}
Trade History - GET /v1/user-data/trade-history
Optional Query Params:
startTimestamp: number (UNIX timestamp in milliseconds)
endTimestamp: number (UNIX timestamp in milliseconds)
sortOrder: string (asc or desc, default: desc)
pageSize: number (default: 100)
Get User’s trade history.
For Example: GET /v1/user-data/trade-history?startTimestamp=1720103457000&amp;endTimestamp=1720603457000&amp;sortOrder=desc&amp;pageSize=100
Default Response: (Without query params)
[
  {
    &quot;id&quot;: number,
    &quot;time&quot;: &quot;timestamp&quot;,
    &quot;symbol&quot;: &quot;BTCINR&quot;, // Contract Pair BTCINR, ETHINR, etc.
    &quot;type&quot;: UserOrderType,
    &quot;side&quot;: OrderSide,
    &quot;price&quot;: number,
    &quot;quantity&quot;: number,
    &quot;role&quot;: TradeRole, // TAKER, MAKER
    &quot;fee&quot;: number,
    &quot;feeInMarginAsset&quot;: number, // Optional
    &quot;realizedProfit&quot;: number,
    &quot;realizedProfitInMarginAsset&quot;: number, // Optional
    &quot;contractType&quot;: &quot;PERPETUAL&quot;,
    &quot;clientOrderId&quot;: string,
    &quot;baseAsset&quot;: string,
    &quot;quoteAsset&quot;: string,
    &quot;marginAsset&quot;: string
  }<br>
]
New Response: (With query params)
{
  &quot;totalCount&quot;: 480,
  &quot;nextTimestamp&quot;: 1703047483451,
  &quot;data&quot;: [
    {
      &quot;id&quot;: 13339,
      &quot;time&quot;: &quot;2024-04-24T06:48:24.575Z&quot;,
      &quot;symbol&quot;: &quot;XRPINR&quot;,
      &quot;type&quot;: &quot;MARKET&quot;,
      &quot;side&quot;: &quot;BUY&quot;,
      &quot;price&quot;: 53.75,
      &quot;quantity&quot;: 11,
      &quot;role&quot;: &quot;TAKER&quot;,
      &quot;fee&quot;: 0.35,
      &quot;feeInMarginAsset&quot;: number, // Optional
      &quot;realizedProfit&quot;: -0.55,
      &quot;realizedProfitInMarginAsset&quot;: number, // Optional
      &quot;contractType&quot;: &quot;PERPETUAL&quot;,
      &quot;clientOrderId&quot;: &quot;9469f5402004ff53b48a-12-ext&quot;,
      &quot;baseAsset&quot;: string,
      &quot;quoteAsset&quot;: string,
      &quot;marginAsset&quot;: string
    },
  ],
}
Note: About nextTimestamp field in the response, it should be used as the query param for the next API call for pagination:
Case 1: sortOrder is ascending,
In this case, shift the lower bound, i.e. nextTimestamp value should be entered in the startTimestamp query param for the next API call.
Case2: sortOrder is descending,
In this case, shift the upper bound, i.e. nextTimestamp value should be entered in the endTimestamp query param for the next API call.
Note: Either of the bounds (start or end) can be skipped, for example, input can also be only endTimestamp while startTimestamp not being mentioned.
For examples of usage of startTimestamp, endTimestamp, sortOrder, Pagesize - please refer the “Examples” section of Order History.
Trade History by Trade Id - GET /v1/user-data/trade-history/{id}
Get user’s trade history for based on trade id.
For Example: GET /v1/user-data/trade-history/10
Response:
{
  &quot;id&quot;: number,
  &quot;time&quot;: &quot;timestamp&quot;,
  &quot;symbol&quot;: &quot;BTCINR&quot;, // Contract Pair BTCINR, ETHINR, etc.
  &quot;type&quot;: UserOrderType,
  &quot;side&quot;: OrderSide,
  &quot;price&quot;: number,
  &quot;quantity&quot;: number,
  &quot;role&quot;: TradeRole, // TAKER, MAKER
  &quot;fee&quot;: number,
  &quot;feeInMarginAsset&quot;: number, // Optional
  &quot;realizedProfit&quot;: number,
  &quot;realizedProfitInMarginAsset&quot;: number, // Optional
  &quot;contractType&quot;: &quot;PERPETUAL&quot;,
  &quot;clientOrderId&quot;: string,
  &quot;baseAsset&quot;: string,
  &quot;quoteAsset&quot;: string,
  &quot;marginAsset&quot;: string
}</p>
<h2 id='position'>Position</h2>
<p>Positions - GET /v1/positions/{positionStatus}
Optional Query Params:
startTimestamp: number (UNIX timestamp in milliseconds)
endTimestamp: number (UNIX timestamp in milliseconds)
sortOrder: string (asc or desc, default: desc)
pageSize: number (default: 100)
List Positions based on position status
positionStatus can be OPEN, CLOSED, LIQUIDATED
For Example: GET /v1/positions/OPEN?startTimestamp=1720103457000&amp;endTimestamp=1720603457000&amp;sortOrder=desc&amp;pageSize=100
Default Response: (Without query params)
[
  {
    &quot;contractPair&quot;: string,
    &quot;entryPrice&quot;: number,
    &quot;leverage&quot;: number,
    &quot;liquidationPrice&quot;: number,
    &quot;marginType&quot;: &quot;ISOLATED&quot;,
    &quot;marginAsset&quot;: string,
    &quot;margin&quot;: number,
    &quot;marginInMarginAsset&quot;: number, // Optional
    &quot;positionAmount&quot;: number,
    &quot;positionId&quot;: string,
    &quot;positionSize&quot;: number,
    &quot;positionStatus&quot;: PositionStatus,
    &quot;positionType&quot;: PositionType,
    &quot;realizedProfit&quot;: number,
    &quot;realizedProfitInMarginAsset&quot;: number, // Optional
    &quot;quantity&quot;: number,
    &quot;createdAt&quot;: &quot;timestamp&quot;,
    &quot;contractType&quot;: &quot;PERPETUAL&quot;,
    &quot;iconUrl&quot;: string,
    &quot;baseAsset&quot;: string,
    &quot;quoteAsset&quot;: string
  }
]
New Response: (With query params)
{
  &quot;totalCount&quot;: 2,
  &quot;nextTimestamp&quot;: 1703047483451,
  &quot;data&quot;: [
      {
      &quot;contractPair&quot;: string,
      &quot;entryPrice&quot;: number,
      &quot;leverage&quot;: number,
      &quot;liquidationPrice&quot;: number,
      &quot;marginType&quot;: &quot;ISOLATED&quot;,
      &quot;marginAsset&quot;: string,
      &quot;margin&quot;: number,
      &quot;marginInMarginAsset&quot;: number, // Optional
      &quot;positionAmount&quot;: number,
      &quot;positionId&quot;: string,
      &quot;positionSize&quot;: number,
      &quot;positionStatus&quot;: PositionStatus,
      &quot;positionType&quot;: PositionType,
      &quot;realizedProfit&quot;: number,
      &quot;realizedProfitInMarginAsset&quot;: number, // Optional
      &quot;quantity&quot;: number,
      &quot;createdAt&quot;: &quot;timestamp&quot;,
      &quot;contractType&quot;: &quot;PERPETUAL&quot;,
      &quot;iconUrl&quot;: string,
      &quot;baseAsset&quot;: string,
      &quot;quoteAsset&quot;: string
    },
    {
      &quot;contractPair&quot;: &quot;FTMINR&quot;,
      &quot;entryPrice&quot;: 90.82,
      &quot;leverage&quot;: 10,
      &quot;liquidationPrice&quot;: 82.92,
      &quot;marginType&quot;: &quot;ISOLATED&quot;,
      &quot;marginAsset&quot;: &quot;INR&quot;,
      &quot;margin&quot;: 44.88,
      &quot;marginInMarginAsset&quot;: 44.8,
      &quot;positionAmount&quot;: 5,
      &quot;positionId&quot;: &quot;f70d40fb-8250-4c61-9872-6a0d8e8f4454&quot;,
      &quot;positionSize&quot;: 12,
      &quot;positionStatus&quot;: &quot;OPEN&quot;,
      &quot;positionType&quot;: &quot;LONG&quot;,
      &quot;realizedProfit&quot;: -44.44,
      &quot;realizedProfitInMarginAsset&quot;: -44.44,
      &quot;quantity&quot;: 5,
      &quot;createdAt&quot;: &quot;2024-03-28T07:54:43.343Z&quot;,
      &quot;contractType&quot;: &quot;PERPETUAL&quot;,
      &quot;iconUrl&quot;: &quot;https://storage.googleapis.com/pi42-dev-static/contract-icons/ftm.png&quot;,
      &quot;baseAsset&quot;: &quot;FTM&quot;,
      &quot;quoteAsset&quot;: &quot;INR&quot;
    },
  ],
}
Note: About nextTimestamp field in the response, it should be used as the query param for the next API call for pagination:
Case 1: sortOrder is ascending,
In this case, shift the lower bound, i.e. nextTimestamp value should be entered in the startTimestamp query param for the next API call.
Case2: sortOrder is descending,
In this case, shift the upper bound, i.e. nextTimestamp value should be entered in the endTimestamp query param for the next API call.
Note: Either of the bounds (start or end) can be skipped, for example, input can also be only endTimestamp while startTimestamp not being mentioned.
For examples of usage of startTimestamp, endTimestamp, sortOrder, Pagesize - please refer the “Examples” section of Order History.
Get Position - GET /v1/positions
Fetch order details based on client order id.
Query Params:
positionId: string
For Example: GET /v1/positions?positionId=abc
Response
{
  id: number;
  contractPair: string;
  contractType: string;
  entryPrice: number;
  leverage: number;
  liquidationPrice: number;
  marginType: &quot;ISOLATED&quot;;
  margin: number;
  marginInMarginAsset: number; // Optional
  positionAmount: number;
  positionId: string;
  positionSize: number;
  positionStatus: PositionStatus;
  positionType: PositionType;
  realizedProfit: number;
  realizedProfitInMarginAsset: number; // Optional
  quantity: number;
  baseAsset: string;
  quoteAsset: string;
  marginAsset: string;
  createdTime: Date;
  updatedTime: Date;
}</p>

<p>Exchange
User Meta - GET /v1/exchange/userMeta
Get user preferences for each contract.
Response
{
  &quot;leveragePreferences&quot;: [
    {
      &quot;contractName&quot;: &quot;STXINR&quot;,
      &quot;leverage&quot;: 10,
      &quot;openPositionCount&quot;: 1
    },
    {
      &quot;contractName&quot;: string,
      &quot;leverage&quot;: number,
      &quot;openPositionCount&quot;: number
    },
}
Update Leverage - POST /v1/exchange/update/leverage
Update the user’s preference for leverage for a contract pair for a user.
Important: Leverage can only be changed for a contract pair if for that particular contract pair, there are no open positions or open orders.
Body
{
  &quot;leverage&quot;: 15, // new leverage 
  &quot;contractName&quot;: &quot;BTCINR&quot;, 
}
Response
{
  &quot;updatedLeverage&quot;: 15,
  &quot;contractName&quot;: &quot;BTCINR&quot;
}
Save Chart Data - POST /v1/exchange/save/chart
Save Trading View chart data.
Body
{
  &quot;chartLayout&quot;: [
    &quot;<trading_view_content>&quot;
  ]
}
Get Chart Data - GET /v1/exchange/save/chart
Get Trading View chart data.
Response
[
  {
    &quot;id&quot;: &quot;1707128017165710&quot;,
    &quot;name&quot;: &quot;default_layout&quot;,
    &quot;symbol&quot;: &quot;WIFINR&quot;,
    &quot;content&quot;: &quot;<trading_view_content>&quot;,
    &quot;resolution&quot;: &quot;15&quot;
  }
]</p>
